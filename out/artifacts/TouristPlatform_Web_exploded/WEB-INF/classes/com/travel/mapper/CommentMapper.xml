<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.mapper.CommentMapper">
  <resultMap id="CommentResultMap" type="com.travel.entity.Comment">
    <id column="cid" jdbcType="BIGINT" property="cid" />
    <result column="connectid" jdbcType="BIGINT" property="connectid" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="created" jdbcType="DATE" property="created" />
    <result column="deleted" jdbcType="DATE" property="deleted" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="rate" jdbcType="DOUBLE" property="rate" />
    <result column="agree" jdbcType="INTEGER" property="agree" />
  </resultMap>
  <resultMap extends="CommentResultMap" id="ResultMapWithBLOBs" type="com.travel.entity.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="type" jdbcType="LONGVARCHAR" property="type" />
  </resultMap>
  <resultMap id="UserResultMap" type="com.travel.entity.User">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="idcard" jdbcType="CHAR" property="idcard" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="occupation" jdbcType="VARCHAR" property="occupation" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="created" jdbcType="DATE" property="created" />
    <result column="deleted" jdbcType="DATE" property="deleted" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="identify" jdbcType="INTEGER" property="identify" />
  </resultMap>
  <resultMap extends="UserResultMap" id="UserResultMapWithBLOBs" type="com.travel.entity.User">
    <result column="answer" jdbcType="LONGVARCHAR" property="answer" />
    <result column="picture" jdbcType="LONGVARCHAR" property="picture" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, connectid, uid, created, deleted, period, status, rate, agree
  </sql>
  <sql id="Blob_Column_List">
    content, type
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.travel.entity.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.travel.entity.CommentExample" resultMap="CommentResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where cid = #{cid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comment
    where cid = #{cid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.travel.entity.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <delete id="deleteAllCommentByUid">
    delete from comment
    where uid = #{uid,jdbcType=BIGINT}
  </delete>



  <insert id="insert" parameterType="com.travel.entity.Comment">
    insert into comment (cid, connectid, uid, 
      created, deleted, period, 
      status, rate, agree, 
      content, type)
    values (#{cid,jdbcType=BIGINT}, #{connectid,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, 
      #{created,jdbcType=DATE}, #{deleted,jdbcType=DATE}, #{period,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{rate,jdbcType=DOUBLE}, #{agree,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR}, #{type,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.travel.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="connectid != null">
        connectid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="agree != null">
        agree,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="connectid != null">
        #{connectid,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=DATE},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=DATE},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DOUBLE},
      </if>
      <if test="agree != null">
        #{agree,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>





  <select id="countByExample" parameterType="com.travel.entity.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>


  <select id="getUserByUid" resultType="com.travel.entity.User">
    select * from user where uid = #{uid,jdbcType=BIGINT}
  </select>



  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=BIGINT},
      </if>
      <if test="record.connectid != null">
        connectid = #{record.connectid,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=DATE},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=DATE},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=DOUBLE},
      </if>
      <if test="record.agree != null">
        agree = #{record.agree,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comment
    set cid = #{record.cid,jdbcType=BIGINT},
      connectid = #{record.connectid,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      created = #{record.created,jdbcType=DATE},
      deleted = #{record.deleted,jdbcType=DATE},
      period = #{record.period,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      rate = #{record.rate,jdbcType=DOUBLE},
      agree = #{record.agree,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR},
      type = #{record.type,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set cid = #{record.cid,jdbcType=BIGINT},
      connectid = #{record.connectid,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      created = #{record.created,jdbcType=DATE},
      deleted = #{record.deleted,jdbcType=DATE},
      period = #{record.period,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      rate = #{record.rate,jdbcType=DOUBLE},
      agree = #{record.agree,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.travel.entity.Comment">
    update comment
    <set>
      <if test="connectid != null">
        connectid = #{connectid,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=DATE},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=DATE},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DOUBLE},
      </if>
      <if test="agree != null">
        agree = #{agree,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.travel.entity.Comment">
    update comment
    set connectid = #{connectid,jdbcType=BIGINT},
      uid = #{uid,jdbcType=BIGINT},
      created = #{created,jdbcType=DATE},
      deleted = #{deleted,jdbcType=DATE},
      period = #{period,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DOUBLE},
      agree = #{agree,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      type = #{type,jdbcType=LONGVARCHAR}
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.travel.entity.Comment">
    update comment
    set connectid = #{connectid,jdbcType=BIGINT},
      uid = #{uid,jdbcType=BIGINT},
      created = #{created,jdbcType=DATE},
      deleted = #{deleted,jdbcType=DATE},
      period = #{period,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DOUBLE},
      agree = #{agree,jdbcType=INTEGER}
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <update id="updateLikeCount">
    update comment
    set agree = (select count(*) from likes where connectid = #{cid,jdbcType=BIGINT} and type = 'comment')
    where cid = #{cid,jdbcType=BIGINT}
  </update>

</mapper>