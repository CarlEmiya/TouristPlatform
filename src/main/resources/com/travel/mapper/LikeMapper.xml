<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.mapper.LikeMapper">
  <resultMap id="LikeResultMap" type="com.travel.entity.Like">
    <id column="lid" jdbcType="BIGINT" property="lid" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="connectid" jdbcType="BIGINT" property="connectid" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    lid, uid, connectid, type, created, status
  </sql>
  <select id="selectByExample" parameterType="com.travel.entity.LikeExample" resultMap="LikeResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from likes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="LikeResultMap">
    select 
    <include refid="Base_Column_List" />
    from likes
    where lid = #{lid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from likes
    where lid = #{lid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.travel.entity.LikeExample">
    delete from likes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.travel.entity.Like">
    insert into likes (lid, uid, connectid, 
      type, created, status)
    values (#{lid,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{connectid,jdbcType=BIGINT}, 
      #{type,jdbcType=CHAR}, #{created,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.travel.entity.Like">
    insert into likes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lid != null">
        lid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="connectid != null">
        connectid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lid != null">
        #{lid,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="connectid != null">
        #{connectid,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.travel.entity.LikeExample" resultType="java.lang.Long">
    select count(*) from likes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update likes
    <set>
      <if test="record.lid != null">
        lid = #{record.lid,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.connectid != null">
        connectid = #{record.connectid,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update likes
    set lid = #{record.lid,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      connectid = #{record.connectid,jdbcType=BIGINT},
      type = #{record.type,jdbcType=CHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.travel.entity.Like">
    update likes
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="connectid != null">
        connectid = #{connectid,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
    </set>
    where lid = #{lid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.travel.entity.Like">
    update likes
    set uid = #{uid,jdbcType=BIGINT},
      connectid = #{connectid,jdbcType=BIGINT},
      type = #{type,jdbcType=CHAR},
      created = #{created,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT}
    where lid = #{lid,jdbcType=BIGINT}
  </update>
</mapper>