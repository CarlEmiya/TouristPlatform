<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.mapper.ActivityRegistrationMapper">
  <resultMap id="ActivityRegistrationResultMap" type="com.travel.entity.ActivityRegistration">
    <id column="arid" jdbcType="BIGINT" property="arid" />
    <result column="aid" jdbcType="BIGINT" property="aid" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap id="UserResultMap" type="com.travel.entity.User">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="idcard" jdbcType="CHAR" property="idcard" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="occupation" jdbcType="VARCHAR" property="occupation" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="created" jdbcType="DATE" property="created" />
    <result column="deleted" jdbcType="DATE" property="deleted" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="identify" jdbcType="INTEGER" property="identify" />
  </resultMap>
  <resultMap extends="UserResultMap" id="UserResultMapWithBLOBs" type="com.travel.entity.User">
    <result column="answer" jdbcType="LONGVARCHAR" property="answer" />
    <result column="picture" jdbcType="LONGVARCHAR" property="picture" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <resultMap id="TravelActivityResultMap" type="com.travel.entity.TravelActivity">
    <id column="aid" jdbcType="BIGINT" property="aid" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="min" jdbcType="INTEGER" property="min" />
    <result column="required" jdbcType="INTEGER" property="required" />
    <result column="current" jdbcType="INTEGER" property="current" />
    <result column="start" jdbcType="TIMESTAMP" property="start" />
    <result column="end" jdbcType="TIMESTAMP" property="end" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="deleted" jdbcType="DATE" property="deleted" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="deadline" jdbcType="TIMESTAMP" property="deadline" />
    <result column="created" jdbcType="DATE" property="created" />
    <result column="rate" jdbcType="DOUBLE" property="rate" />
    <result column="agree" jdbcType="INTEGER" property="agree" />
  </resultMap>
  <resultMap extends="TravelActivityResultMap" id="ResultMapWithBLOBs" type="com.travel.entity.TravelActivity">
    <result column="title" jdbcType="LONGVARCHAR" property="title" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="label" jdbcType="LONGVARCHAR" property="label" />
    <result column="reason" jdbcType="LONGVARCHAR" property="reason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    arid, aid, uid, time, status
  </sql>
  <select id="selectByExample" parameterType="com.travel.entity.ActivityRegistrationExample" resultMap="ActivityRegistrationResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_registration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ActivityRegistrationResultMap">
    select 
    <include refid="Base_Column_List" />
    from activity_registration
    where arid = #{arid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from activity_registration
    where arid = #{arid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.travel.entity.ActivityRegistrationExample">
    delete from activity_registration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <delete id="deleteByAidAndUid">
    delete from activity_registration
    WHERE aid = #{aid} AND uid = #{uid}
  </delete>

  <insert id="insert" parameterType="com.travel.entity.ActivityRegistration">
    insert into activity_registration (arid, aid, uid, 
      time, status)
    values (#{arid,jdbcType=BIGINT}, #{aid,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, 
      #{time,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>


  <insert id="insertSelective" parameterType="com.travel.entity.ActivityRegistration">
    insert into activity_registration
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="arid != null">
        arid,
      </if>
      <if test="aid != null">
        aid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="arid != null">
        #{arid,jdbcType=BIGINT},
      </if>
      <if test="aid != null">
        #{aid,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <insert id="isAridExist">
    SELECT COUNT(*) > 0
    FROM activity_registration
    WHERE arid = #{arid}
  </insert>

  <select id="countByExample" parameterType="com.travel.entity.ActivityRegistrationExample" resultType="java.lang.Long">
    select count(*) from activity_registration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>


    <select id="getActivityRegistrationByAid" resultType="com.travel.entity.User">
      SELECT u.*
      FROM activity_registration ar
             JOIN User u ON ar.uid = u.uid
      WHERE ar.aid = #{activityId}
    </select>
  <!-- 根据用户id查询参加的活动 -->
  <select id="getActivityByUid" resultType="com.travel.entity.TravelActivity">
    SELECT ta.*
    FROM activity_registration ar
           JOIN Travel_activity ta ON ar.aid = ta.aid
    WHERE ar.uid = #{uid}
  </select>

  <select id="isRegistedByAidAndUid" resultType="java.lang.Boolean">
    SELECT COUNT(*) > 0
    FROM activity_registration
    WHERE aid = #{aid} AND uid = #{uid}
  </select>
  <select id="selectCountByAid" resultType="java.lang.Integer">
    SELECT COUNT(*)
    FROM activity_registration
    WHERE aid = #{aid}
  </select>


  <update id="updateByExampleSelective" parameterType="map">
    update activity_registration
    <set>
      <if test="record.arid != null">
        arid = #{record.arid,jdbcType=BIGINT},
      </if>
      <if test="record.aid != null">
        aid = #{record.aid,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activity_registration
    set arid = #{record.arid,jdbcType=BIGINT},
      aid = #{record.aid,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      time = #{record.time,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.travel.entity.ActivityRegistration">
    update activity_registration
    <set>
      <if test="aid != null">
        aid = #{aid,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where arid = #{arid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.travel.entity.ActivityRegistration">
    update activity_registration
    set aid = #{aid,jdbcType=BIGINT},
      uid = #{uid,jdbcType=BIGINT},
      time = #{time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where arid = #{arid,jdbcType=BIGINT}
  </update>
  <update id="updateStatus">
    update activity_registration
    set status = #{status}
    where arid = #{arid}
  </update>
</mapper>