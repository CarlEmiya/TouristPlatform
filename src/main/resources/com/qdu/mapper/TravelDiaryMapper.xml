<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qdu.mapper.TravelDiaryMapper">
  <resultMap id="BaseResultMap" type="com.qdu.entity.TravelDiary">
    <id column="diaryId" jdbcType="VARCHAR" property="diaryid" />
    <result column="userId" jdbcType="VARCHAR" property="userid" />
    <result column="IsCommentAbled" jdbcType="BIT" property="iscommentabled" />
    <result column="createdAt" jdbcType="DATE" property="createdat" />
    <result column="deletedAt" jdbcType="DATE" property="deletedat" />
    <result column="deletionPeriod" jdbcType="INTEGER" property="deletionperiod" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="agree" jdbcType="INTEGER" property="agree" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qdu.entity.TravelDiary">
    <result column="title" jdbcType="LONGVARCHAR" property="title" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="label" jdbcType="LONGVARCHAR" property="label" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    diaryId, userId, IsCommentAbled, createdAt, deletedAt, deletionPeriod, status, agree
  </sql>
  <sql id="Blob_Column_List">
    title, content, label
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qdu.entity.TravelDiaryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from travel_diary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qdu.entity.TravelDiaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from travel_diary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from travel_diary
    where diaryId = #{diaryid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from travel_diary
    where diaryId = #{diaryid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qdu.entity.TravelDiaryExample">
    delete from travel_diary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qdu.entity.TravelDiary">
    insert into travel_diary (diaryId, userId, IsCommentAbled, 
      createdAt, deletedAt, deletionPeriod, 
      status, agree, title, 
      content, label)
    values (#{diaryid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{iscommentabled,jdbcType=BIT}, 
      #{createdat,jdbcType=DATE}, #{deletedat,jdbcType=DATE}, #{deletionperiod,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{agree,jdbcType=INTEGER}, #{title,jdbcType=LONGVARCHAR}, 
      #{content,jdbcType=LONGVARCHAR}, #{label,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qdu.entity.TravelDiary">
    insert into travel_diary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="diaryid != null">
        diaryId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="iscommentabled != null">
        IsCommentAbled,
      </if>
      <if test="createdat != null">
        createdAt,
      </if>
      <if test="deletedat != null">
        deletedAt,
      </if>
      <if test="deletionperiod != null">
        deletionPeriod,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="agree != null">
        agree,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="label != null">
        label,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="diaryid != null">
        #{diaryid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="iscommentabled != null">
        #{iscommentabled,jdbcType=BIT},
      </if>
      <if test="createdat != null">
        #{createdat,jdbcType=DATE},
      </if>
      <if test="deletedat != null">
        #{deletedat,jdbcType=DATE},
      </if>
      <if test="deletionperiod != null">
        #{deletionperiod,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="agree != null">
        #{agree,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qdu.entity.TravelDiaryExample" resultType="java.lang.Long">
    select count(*) from travel_diary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update travel_diary
    <set>
      <if test="record.diaryid != null">
        diaryId = #{record.diaryid,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.iscommentabled != null">
        IsCommentAbled = #{record.iscommentabled,jdbcType=BIT},
      </if>
      <if test="record.createdat != null">
        createdAt = #{record.createdat,jdbcType=DATE},
      </if>
      <if test="record.deletedat != null">
        deletedAt = #{record.deletedat,jdbcType=DATE},
      </if>
      <if test="record.deletionperiod != null">
        deletionPeriod = #{record.deletionperiod,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.agree != null">
        agree = #{record.agree,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update travel_diary
    set diaryId = #{record.diaryid,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=VARCHAR},
      IsCommentAbled = #{record.iscommentabled,jdbcType=BIT},
      createdAt = #{record.createdat,jdbcType=DATE},
      deletedAt = #{record.deletedat,jdbcType=DATE},
      deletionPeriod = #{record.deletionperiod,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      agree = #{record.agree,jdbcType=INTEGER},
      title = #{record.title,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR},
      label = #{record.label,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update travel_diary
    set diaryId = #{record.diaryid,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=VARCHAR},
      IsCommentAbled = #{record.iscommentabled,jdbcType=BIT},
      createdAt = #{record.createdat,jdbcType=DATE},
      deletedAt = #{record.deletedat,jdbcType=DATE},
      deletionPeriod = #{record.deletionperiod,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      agree = #{record.agree,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qdu.entity.TravelDiary">
    update travel_diary
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="iscommentabled != null">
        IsCommentAbled = #{iscommentabled,jdbcType=BIT},
      </if>
      <if test="createdat != null">
        createdAt = #{createdat,jdbcType=DATE},
      </if>
      <if test="deletedat != null">
        deletedAt = #{deletedat,jdbcType=DATE},
      </if>
      <if test="deletionperiod != null">
        deletionPeriod = #{deletionperiod,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="agree != null">
        agree = #{agree,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where diaryId = #{diaryid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qdu.entity.TravelDiary">
    update travel_diary
    set userId = #{userid,jdbcType=VARCHAR},
      IsCommentAbled = #{iscommentabled,jdbcType=BIT},
      createdAt = #{createdat,jdbcType=DATE},
      deletedAt = #{deletedat,jdbcType=DATE},
      deletionPeriod = #{deletionperiod,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      agree = #{agree,jdbcType=INTEGER},
      title = #{title,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      label = #{label,jdbcType=LONGVARCHAR}
    where diaryId = #{diaryid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qdu.entity.TravelDiary">
    update travel_diary
    set userId = #{userid,jdbcType=VARCHAR},
      IsCommentAbled = #{iscommentabled,jdbcType=BIT},
      createdAt = #{createdat,jdbcType=DATE},
      deletedAt = #{deletedat,jdbcType=DATE},
      deletionPeriod = #{deletionperiod,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      agree = #{agree,jdbcType=INTEGER}
    where diaryId = #{diaryid,jdbcType=VARCHAR}
  </update>
</mapper>