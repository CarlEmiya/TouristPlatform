<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qdu.mapper.UserMapper">
  <resultMap id="UserResultMap" type="com.qdu.entity.User">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="idcard" jdbcType="CHAR" property="idcard" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="occupation" jdbcType="VARCHAR" property="occupation" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="created" jdbcType="DATE" property="created" />
    <result column="deleted" jdbcType="DATE" property="deleted" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="identify" jdbcType="INTEGER" property="identify" />
  </resultMap>
  <resultMap extends="UserResultMap" id="UserResultMapWithBLOBs" type="com.qdu.entity.User">
    <result column="answer" jdbcType="LONGVARCHAR" property="answer" />
    <result column="picture" jdbcType="LONGVARCHAR" property="picture" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, name, password, gender, birth, idcard, email, phone, city, occupation, question, 
    level, created, deleted, period, status, identify
  </sql>
  <sql id="Blob_Column_List">
    answer, picture, description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qdu.entity.UserExample" resultMap="UserResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qdu.entity.UserExample" resultMap="UserResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="UserResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qdu.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qdu.entity.User">
    insert into user (uid, name, password, 
      gender, birth, idcard, email, 
      phone, city, occupation, 
      question, level, created, 
      deleted, period, status, 
      identify, answer, picture, 
      description)
    values (#{uid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=CHAR}, #{birth,jdbcType=DATE}, #{idcard,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{occupation,jdbcType=VARCHAR}, 
      #{question,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{created,jdbcType=DATE}, 
      #{deleted,jdbcType=DATE}, #{period,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{identify,jdbcType=INTEGER}, #{answer,jdbcType=LONGVARCHAR}, #{picture,jdbcType=LONGVARCHAR}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qdu.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="occupation != null">
        occupation,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="identify != null">
        identify,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="occupation != null">
        #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=DATE},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=DATE},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="identify != null">
        #{identify,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=LONGVARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qdu.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.occupation != null">
        occupation = #{record.occupation,jdbcType=VARCHAR},
      </if>
      <if test="record.question != null">
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=DATE},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=DATE},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.identify != null">
        identify = #{record.identify,jdbcType=INTEGER},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user
    set uid = #{record.uid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      birth = #{record.birth,jdbcType=DATE},
      idcard = #{record.idcard,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      occupation = #{record.occupation,jdbcType=VARCHAR},
      question = #{record.question,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      created = #{record.created,jdbcType=DATE},
      deleted = #{record.deleted,jdbcType=DATE},
      period = #{record.period,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      identify = #{record.identify,jdbcType=INTEGER},
      answer = #{record.answer,jdbcType=LONGVARCHAR},
      picture = #{record.picture,jdbcType=LONGVARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set uid = #{record.uid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      birth = #{record.birth,jdbcType=DATE},
      idcard = #{record.idcard,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      occupation = #{record.occupation,jdbcType=VARCHAR},
      question = #{record.question,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      created = #{record.created,jdbcType=DATE},
      deleted = #{record.deleted,jdbcType=DATE},
      period = #{record.period,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      identify = #{record.identify,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qdu.entity.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="occupation != null">
        occupation = #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=DATE},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=DATE},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="identify != null">
        identify = #{identify,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=LONGVARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qdu.entity.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birth = #{birth,jdbcType=DATE},
      idcard = #{idcard,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      occupation = #{occupation,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      created = #{created,jdbcType=DATE},
      deleted = #{deleted,jdbcType=DATE},
      period = #{period,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      identify = #{identify,jdbcType=INTEGER},
      answer = #{answer,jdbcType=LONGVARCHAR},
      picture = #{picture,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qdu.entity.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birth = #{birth,jdbcType=DATE},
      idcard = #{idcard,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      occupation = #{occupation,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      created = #{created,jdbcType=DATE},
      deleted = #{deleted,jdbcType=DATE},
      period = #{period,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      identify = #{identify,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>